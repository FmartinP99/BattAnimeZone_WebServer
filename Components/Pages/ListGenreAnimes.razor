@using BattAnimeZone.Services
@using BattAnimeZone.Components.Models.Genre
@using BattAnimeZone.Components.Models.Anime
@inject AnimeService animeService
@inject NavigationManager navManager
<link rel="stylesheet" href="/ListGenreAnimes.css" />
@page "/genrelist/{genreid:int}"


<SearchBar></SearchBar>

<RadzenPager Style="overflow-x: clip; max-width: 25vw; ;"  PagingSummaryFormat="@pagingSummaryFormat" ShowPagingSummary="true" HorizontalAlign="HorizontalAlign.Left" PageNumbersCount=5 PageSize=@pageSize Count="count" PageChanged="@PageChanged" />


<RadzenDataList WrapItems="true" AllowPaging="false" Data="@animes_per_page" TItem="Anime">
    <Template Context="anime">
        <RadzenCard class="lga-card" @onclick="@(() => NavigateTo(anime.Mal_id))">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
                <RadzenImage Path="@anime.Image_large_webp_url" Style="width: 100px; height: 100px; border-radius: 15%" AlternateText="no image" />
                <RadzenStack Gap="0">
                    <RadzenText TextStyle="TextStyle.Overline" Style="color:White" class=" rz-display-flex rz-mt-2 rz-my-0">English Name</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1" Style="color:White"><b>@(anime.Title_english)</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" Style="color:White" class="rz-display-flex rz-mt-4 rz-mb-0">Japanese Name</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1" Style="color:White"><b>@(anime.Title_japanese)</b></RadzenText>
                </RadzenStack>
                <RadzenStack Gap="0">
                    <RadzenText TextStyle="TextStyle.Overline" Style="color:White" class=" rz-display-flex rz-mt-2 rz-my-0">Score</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1" Style="color:White"><b>@(anime.Score)</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" Style="color:White" class="rz-display-flex rz-mt-4 rz-mb-0">Popularity</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1" Style="color:White"><b>@(anime.Popularity)</b></RadzenText>
                </RadzenStack>

                <RadzenStack Gap="0">
                    <RadzenText TextStyle="TextStyle.Overline" Style="color:White" class=" rz-display-flex rz-mt-2 rz-my-0">Type</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1" Style="color:White"><b>@(anime.Media_type)</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" Style="color:White" class="rz-display-flex rz-mt-4 rz-mb-0">Year</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1" Style="color:White"><b>@(anime.Year)</b></RadzenText>
                </RadzenStack>
            </RadzenStack>
            <hr style="border: none; background-color: rgba(0,0,0,.2); height: 1px; margin: 1rem 0;" />
            <RadzenRow>
                <RadzenColumn Size="8" Class="rz-text-truncate">
                    <b>Episodes: @(anime.Episodes)</b>
                    
                </RadzenColumn>
            </RadzenRow>
        </RadzenCard>
    </Template>
</RadzenDataList>


@code {
    [Parameter]
    public int genreid { get; set; }
    List<Anime> animes = new List<Anime>();
    IEnumerable<Anime> animes_per_page = new List<Anime>();
    string pagingSummaryFormat = "Displaying page {0} of {1} (total {2} records)";
    int pageSize = 9;
    int count;
    int pageNumber;


    protected override async Task OnInitializedAsync()
    {

        animes = await animeService.GetAnimesPerGenre(genreid);
        count = animes.Count;
        pageNumber = (int)Math.Ceiling((float)count / pageSize);
        animes_per_page = animes.Take(pageSize);

        base.OnInitialized();
    }

    void PageChanged(PagerEventArgs args)
    {
        animes_per_page = animes.Skip(args.Skip).Take(args.Top);
    }


    protected async void NavigateTo(int mal_id)
    {

        navManager.NavigateTo($"/anime/{mal_id}");
    }
}
